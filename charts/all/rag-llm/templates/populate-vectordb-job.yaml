apiVersion: batch/v1
kind: Job
metadata:
  name:  populate-vectordb-{{ include "rag-llm.fullname" . }}
  labels:
    {{- include "rag-llm.labels" . | nindent 4 }}
spec:
  template:
    spec:
    {{- if .Values.populateDbJob.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.populateDbJob.imagePullSecrets }}
    {{- end }}
    {{- if .Values.populateDbJob.securityContext.runAsUser }}
      securityContext:
        runAsUser: {{ .Values.populateDbJob.securityContext.runAsUser }}
        {{- if .Values.populateDbJob.securityContext.runAsGroup }}
        runAsGroup: {{ .Values.populateDbJob.securityContext.runAsGroup }}
        {{- end }}
        {{- if .Values.populateDbJob.securityContext.fsGroup }}
        fsGroup: {{ .Values.populateDbJob.securityContext.fsGroup }}
        {{- end }}
    {{- end }}
      containers:
      - image: "{{ .Values.populateDbJob.image.repository }}:{{ .Values.populateDbJob.image.tag }}"
        imagePullPolicy: {{ .Values.populateDbJob.image.pullPolicy }}
        name: populate-vectordb
        env:
        - name: TEMP_DIR
          value: {{ .Values.populateDbJob.tempDir }}
        - name: LOG_LEVEL
          value: {{ .Values.populateDbJob.logLevel }}
        - name: REPO_SOURCES
          value: {{ .Values.populateDbJob.repoSources | toJson | quote }}
        - name: WEB_SOURCES
          value: {{ .Values.populateDbJob.webSources | toJson | quote }}
        - name: CHUNK_SIZE
          value: {{ .Values.populateDbJob.chunking.size | quote }}
        - name: CHUNK_OVERLAP
          value: {{ .Values.populateDbJob.chunking.overlap | quote }}
        - name: EMBEDDING_MODEL
          value: {{ .Values.global.model.embedding }}
      {{- if eq .Values.global.db.type "REDIS" }}
        - name: DB_TYPE
          value: "REDIS"
        - name: REDIS_URL
          value: redis://redis-stack-server:6379
        - name: REDIS_INDEX
          value: {{ .Values.global.db.index }}
        - name: REDIS_SCHEMA
          value: redis_schema.yaml
      {{- end }}
      {{- if eq .Values.global.db.type "EDB" }}
        - name: DB_TYPE
          value: "PGVECTOR"
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: vectordb-app
              key: username
        - name: PORT
          valueFrom:
            secretKeyRef:
              name: vectordb-app
              key: port
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: vectordb-app
              key: port
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: vectordb-app
              key: dbname
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: vectordb-app
              key: host
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: vectordb-app
              key: password
        - name: PGVECTOR_URL
          value: 'postgresql+psycopg://$(DB_USERNAME):$(DB_PASS)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)'
        - name: PGVECTOR_COLLECTION_NAME
          value: {{ .Values.global.db.index }}
      {{- end }}
      {{- if eq .Values.global.db.type "ELASTIC" }}
        - name: DB_TYPE
          value: "ELASTIC"
        - name: ELASTIC_INDEX
          value: {{ .Values.global.db.index }}
        - name: ELASTIC_URL
          value: "http://es-vectordb-es-http:9200"
        - name: ELASTIC_USER
          value: "elastic"
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: es-vectordb-es-elastic-user
              key: elastic
      {{- end }}
      {{- if eq .Values.global.db.type "MSSQL" }}
        - name: DB_TYPE
          value: MSSQL
        - name: MSSQL_CONNECTION_STRING
          valueFrom:
            secretKeyRef:
              name: mssql-secret
              key: CONNECTION_STRING
        - name: MSSQL_TABLE
          value: {{ .Values.global.db.index }}
      {{- end }}
      {{- if eq .Values.global.db.type "AZURESQL" }}
        - name: DB_TYPE
          value: MSSQL
        - name: MSSQL_CONNECTION_STRING
          valueFrom:
            secretKeyRef:
              name: azuresql-secret
              key: CONNECTION_STRING
        - name: MSSQL_TABLE
          value: {{ .Values.global.db.index }}
      {{- end }}
        {{- if .Values.populateDbJob.command }}
        command: {{ .Values.populateDbJob.command }}
        {{- end }}
        {{- if .Values.populateDbJob.args }}
        args: {{ .Values.populateDbJob.args }}
        {{- end }}
        {{- with .Values.populateDbJob.resources }}
        resources:
{{ toYaml . | indent 10 }}
        {{- end }}
        {{- with .Values.populateDbJob.volumeMounts }}
        volumeMounts:
{{ toYaml . | indent 8 }}
        {{- end }}
      {{- with .Values.populateDbJob.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.populateDbJob.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.populateDbJob.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.populateDbJob.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      restartPolicy: {{ .Values.populateDbJob.restartPolicy }}
  backoffLimit: {{ .Values.populateDbJob.backoffLimit }}
